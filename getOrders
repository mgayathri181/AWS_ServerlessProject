import json
import boto3
from decimal import Decimal

def decimal_default(obj):
    if isinstance(obj, Decimal):
        return float(obj)
    raise TypeError

def lambda_handler(event, context):
    dynamodb = boto3.resource('dynamodb', region_name='ca-central-1')
    table = dynamodb.Table('Orders')

    try:
        # Scan the table to get all orders
        response = table.scan()
        orders = response.get('Items', [])

        # Optional: Log the orders for debugging (can be removed in prod)
        print("Fetched Orders:", orders)

        return {
            "statusCode": 200,
            "headers": {
                "Access-Control-Allow-Origin": "*",
                "Access-Control-Allow-Methods": "GET, OPTIONS",
                "Access-Control-Allow-Headers": "Content-Type"
            },
            "body": json.dumps(orders, default=decimal_default)
        }

    except Exception as e:
        print("Error fetching orders:", str(e))
        return {
            "statusCode": 500,
            "headers": {
                "Access-Control-Allow-Origin": "*",
                "Access-Control-Allow-Methods": "GET, OPTIONS",
                "Access-Control-Allow-Headers": "Content-Type"
            },
            "body": json.dumps({"error": str(e)})
        }
